#!/usr/bin/env bash

BASE_DIR=$(pwd)

rm -rf /autograder/testbox
mkdir -p /autograder/testbox
TESTBOX=/autograder/testbox
REPO=/autograder/autograder-code
TESTS=$REPO/tests
SUBMISSION=/autograder/submission

# sanity check before doing any real effort
# TODO: move this check into run_tests.py?
if [ ! -f $SUBMISSION/function.cpp ]; then
	{
		echo "{\"score\": 0, \"output\": \"function.cpp does not exist.\"}"
	} > /autograder/results/results.json
	exit 1
fi

if [ ! -f $SUBMISSION/function.h ]; then
	{
		echo "{\"score\": 0, \"output\": \"grade_calculator.h does not exist.\"}"
	} > /autograder/results/results.json
	exit 1
fi

if [ ! -f $SUBMISSION/main.cpp ]; then
	{
		echo "{\"score\": 0, \"output\": \"main.cpp does not exist.\"}"
	} > /autograder/results/results.json
	exit 1
fi

# Update autograder files
cd $REPO
git pull

# backdoor update run_autograder?
cp $REPO/run_autograder /autograder/

# copy header files to testbox
cp $TESTS/cs12x_test.h $TESTBOX/

# copy student code to testbox
cp $SUBMISSION/main.cpp $TESTBOX/
cp $SUBMISSION/function.cpp $TESTBOX/
cp $SUBMISSION/function.h $TESTBOX/

# copy test runner to testbox
cp $REPO/run_tests.py $TESTBOX/
# cp $REPO/rename_class_and_methods.py $TESTBOX/
cp $TESTS/approved_includes.sh $TESTBOX/
cp tests/approved_includes_main.cpp $TESTBOX/
cp tests/approved_includes_function.cpp $TESTBOX/
cp tests/function_tests.cpp $TESTBOX/
cp -r tests/io_tests/ $TESTBOX/
cp -r tests/script_tests/ $TESTBOX/

cd $TESTBOX

# run tests <tests file> [results file]
chmod u+x approved_includes.sh
python3 run_tests.py function_tests.cpp /autograder/results/results.json
